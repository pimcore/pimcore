name: Sync releases to CE from EE

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name'
        required: true
        type: string
      release_body:
        description: 'Release body contents'
        required: true
        type: string
      release_name:
        description: 'Release name'
        required: true
        type: string
      sha:
        description: 'SHA hash of the release tag or branch name'
        required: true
        type: string
      rc_release:
        description: 'Release is a release candidate'
        required: false
        type: boolean
      patch_release:
        description: 'Release is a patch release'
        required: false
        type: boolean

jobs:
  check-tag-val:
    env:
      TAG_NAME: ${{ github.event.inputs.tag_name }}
      RC_RELEASE: ${{ github.event.inputs.rc_release }}
      PATCH_RELEASE: ${{ github.event.inputs.patch_release }}
      REGEX_REGULAR: "^v[0-9]+\\.[0-9]+\\.[0-9]+$"
      REGEX_RC: "^v[0-9]+\\.[0-9]+\\.[0-9]+-RC[0-9]+$"
      REGEX_PATCH: "^v[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$"
    if: github.repository == 'pimcore/ee-pimcore'
    runs-on: ubuntu-latest
    outputs:
      isTagValid: ${{ steps.check.outputs.isTagValid }}
    steps:
    - name: Check tag format to accept major and minor and exclude patches
      id: check
      run: |

        if [[ "$RC_RELEASE" == "true" ]]; then
          REGEX=$REGEX_RC
        elif [[ "$PATCH_RELEASE" == "true" ]]; then
          REGEX=$REGEX_PATCH
        else
          REGEX=$REGEX_REGULAR
        fi

        if [[ "$TAG_NAME" =~ $REGEX ]]; then
          echo "isTagValid=true" >> $GITHUB_OUTPUT
        else
          echo "isTagValid=false" >> $GITHUB_OUTPUT
          echo "No valid release value found. Check input params" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi


  sync-release-to-ce:
    needs: check-tag-val
    if: github.repository == 'pimcore/ee-pimcore' && needs.check-tag-val.outputs.isTagValid == 'true'
    uses: pimcore/workflows-centralized/.github/workflows/reusable-sync-releases.yml@v1.0.0-rc.6
    with:
      tag_name: ${{ inputs.tag_name }}
      release_body : ${{ inputs.release_body}}
      release_name: ${{ inputs.release_name }}
      sha: ${{ inputs.sha }}
      target_repo: 'pimcore'
    secrets:
      token: ${{ secrets.SYNC_TOKEN }}
